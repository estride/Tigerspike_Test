// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TigerSpike.Data;

namespace TigerSpike.Data.Migrations
{
    [DbContext(typeof(TSContext))]
    partial class TSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TigerSpike.Entities.Models.Movie", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullImagePath");

                    b.Property<string>("LongDescription");

                    b.Property<string>("Rating");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("ThumbnailPath");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Movie","dbo");
                });

            modelBuilder.Entity("TigerSpike.Entities.Models.Screen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("MovieId");

                    b.Property<string>("ScreenName");

                    b.Property<DateTime>("ScreeningDateTime");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Screen","dbo");
                });

            modelBuilder.Entity("TigerSpike.Entities.Models.Screen", b =>
                {
                    b.HasOne("TigerSpike.Entities.Models.Movie")
                        .WithMany("ScreenTimings")
                        .HasForeignKey("MovieId");
                });
#pragma warning restore 612, 618
        }
    }
}
